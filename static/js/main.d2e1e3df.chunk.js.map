{"version":3,"sources":["firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","console","log","Imagegrid","setSelectedImg","className","map","motion","div","key","layout","whileHover","opacity","height","onClick","url","img","initial","animate","transition","delay","src","alt","Modal","selectedImg","e","target","classList","contains","y","Title","hidden","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","action","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2e1e3df.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBcdjLAWwPBwRhjdhS3TAPyb2bibYRtsh4\",\n  authDomain: \"firegram-gallery-00.firebaseapp.com\",\n  databaseURL: \"https://firegram-gallery-00-default-rtdb.firebaseio.com\",\n  projectId: \"firegram-gallery-00\",\n  storageBucket: \"firegram-gallery-00.appspot.com\",\n  messagingSenderId: \"762511217221\",\n  appId: \"1:762511217221:web:3325c5c7700fceb047892c\",\n  measurementId: \"G-9M7SHV8Y56\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n  useEffect(() => {\n    const unsub = projectFirestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n          console.log(doc.id)\n        });\n        setDocs(documents);\n      });\n    return () => unsub;\n  }, [collection]);\n  return { docs };\n};\n\nexport default useFirestore;\n","import React from \"react\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\nconst Imagegrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore(\"images\");\n  console.log(docs);\n\n  return (\n    <div className=\"img-grid\">\n      {docs &&\n        docs.map((doc) => (\n          <motion.div\n            className=\"img-wrap\"\n            key={doc.id}\n            layout\n            whileHover={{ opacity: 1 ,height:100}}\n            onClick={() => setSelectedImg(doc.url)}\n          >\n            <motion.img\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n              src={doc.url}\n              alt=\"uploaded pic\"\n\n            />\n          </motion.div>\n        ))}\n    </div>\n  );\n};\n\nexport default Imagegrid;\n","import React from 'react'\nimport { motion } from \"framer-motion\";\n\nconst Modal = ({selectedImg,setSelectedImg}) => {\n    \n    const handleClick = (e) => {\n        if(e.target.classList.contains('backdrop')){\n            setSelectedImg(null)\n\n        }\n        \n    }\n    \n    return(\n        <motion.div \n        initial={{opacity:0}}\n        animate={{opacity:1}}\n        className=\"backdrop\"onClick={handleClick} >\n            <motion.img\n            initial={{y:'-100vh'}}\n            animate={{y:0}} src={selectedImg} alt=\"enlarged pic\"/>\n        </motion.div>\n    )\n}\n\nexport default Modal;","import React from 'react';\n \nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Shades Creations â™¥</h1>\n      <h2 >My Projects</h2>\n      <p hidden=\"true\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from \"react\";\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    //refrences\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection(\"images\");\n    storageRef.put(file).on(\n      \"state-changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        collectionRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n","import React, { useEffect } from \"react\";\nimport useStorage from \"../hooks/useStorage\";\nimport { motion } from \"framer-motion\";\nconst ProgressBar = ({ file, setFile }) => {\n  const { url, progress } = useStorage(file);\n  // console.log(progress,url)\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n  return (\n    <div>\n      <motion.div className=\"progress-bar\"\n      initial={{width:0}}\n      animate={{width:progress+'%'}}></motion.div>\n      <div>{progress === null ? \"\" : progress + \"%\"}</div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from \"react\";\nimport ProgressBar from '../comps/ProgressBar'\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image(.png or .jpg) file\");\n    }\n  };\n\n  return (\n    <form action=\"\">\n      <label>\n      <input type=\"file\" onChange={changeHandler} />\n      <span>+</span>\n      </label>\n      <div className=\"output\">\n        {error && <div className=\"error\">{error}</div>}\n        {file && <div>File name: {file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile}/>}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import React, { useState } from \"react\";\n\nimport Imagegrid from \"./comps/ImageGrid\";\nimport Modal from \"./comps/Modal\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nfunction App() {\n\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <Imagegrid setSelectedImg={setSelectedImg} />\n     {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}